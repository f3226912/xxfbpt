<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- C3P0数据源 -->
	<bean id="dataSource_vio" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrlvio}" />
		<property name="user" value="${jdbc.uservio}" />
		<property name="password" value="${jdbc.passwordvio}" /> 
		
		<!-- <property name="jdbcUrl" value="jdbc:oracle:thin:@100.100.3.157:1521:orcl" />
		<property name="user" value="itosc" />
		<property name="password" value="testitosc" />-->
		
		<property name="minPoolSize" value="${jdbc.minPoolSize}"/><!-- default : 3 连接池保持的最小连接数，后面的maxIdleTimeExcessConnections跟这个配合使用来减轻连接池的负载 -->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/><!-- default : 15 连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接，而是等待其他连接释放，所以这个值有可能会设计地很大 -->
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/><!-- default : 0 单位 s 连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接,如果为0，则永远不会断开连接 -->
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/><!-- default : 3 连接池初始化时创建的连接数 -->
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/><!-- default : 3 连接池在无空闲连接可用时一次性创建的新数据库连接数 -->
        
        <property name="idleConnectionTestPeriod" value="${jdbc.acquireIncrement}"/><!-- default : 0 每60秒检查所有连接池中的空闲连接。-->
        <property name="preferredTestQuery" value="select 712 from dual"/><!-- default : null 定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意：测试的表必须在初始数据源的时候就存在。Default: null-->
		<property name="testConnectionOnCheckout" value="${jdbc.testConnectionOnCheckout}"/><!-- default : false 因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。 -->
		<property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}"/><!-- default : false 如果设为true那么在取得连接的同时将校验连接的有效性。 -->
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/><!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"/><!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
	</bean>
	<!-- Session工厂 -->
	<bean id="sessionFactory_vio" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource_vio" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.jdbc.fetch_size">30</prop>
				
				<!-- <prop key="hibernate.dbcp.maxActive">50</prop>
				<prop key="hibernate.dbcp.whenExhaustedAction">1</prop>
				<prop key="hibernate.dbcp.maxWait">6000</prop>
				<prop key="hibernate.dbcp.maxIdle">10</prop>
				
				<prop key="hibernate.dbcp.ps.maxActive">50</prop>
				<prop key="hibernate.dbcp.ps.whenExhaustedAction">1</prop>
				<prop key="hibernate.dbcp.ps.maxWait">6000</prop>
				<prop key="hibernate.dbcp.ps.maxIdle">10</prop> -->
				<prop key="hibernate.autoReconnect">true</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/xxfbpt/ssh/hbm/XxptInterfaceUserinfo.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager_vio" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory_vio" />
	</bean>
	<!-- 事务拦截器 -->
	<bean id="transactionInterceptor_vio" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager_vio" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	<!-- 事物代理器 -->
	<bean id="proxyCreator_vio" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor_vio</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>dwfbptServiceimpl</value>
			</list>
		</property>
	</bean>
</beans>